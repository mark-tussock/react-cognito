{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-cognito.min.js","webpack:///webpack/bootstrap 35ba562028590692bc98","webpack:///./src/index.js","webpack:///./src/actions.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///external {\"root\":\"ReactRedux\",\"commonjs\":\"react-redux\",\"commonjs2\":\"react-redux\",\"amd\":\"react-redux\"}","webpack:///./src/attributes.js","webpack:///./src/auth.js","webpack:///./src/states.js","webpack:///external {\"root\":\"AmazonCognitoIdentity\",\"commonjs2\":\"amazon-cognito-identity-js\",\"commonjs\":\"amazon-cognito-identity-js\",\"amd\":\"amazon-cognito-identity-js\"}","webpack:///./src/utils.js","webpack:///external \"aws-sdk/global\"","webpack:///./src/Confirm.jsx","webpack:///./src/EmailVerification.jsx","webpack:///./src/Login.jsx","webpack:///./src/Logout.jsx","webpack:///./src/NewPasswordRequired.jsx","webpack:///./src/PasswordReset.jsx","webpack:///./src/guard.js","webpack:///./src/policy.js","webpack:///./src/reducers.js","webpack:///./~/fbjs/lib/emptyFunction.js","webpack:///./~/fbjs/lib/invariant.js","webpack:///./~/prop-types/factoryWithThrowingShims.js","webpack:///./~/prop-types/index.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_9__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Object","defineProperty","value","_reducers","keys","forEach","key","enumerable","get","_actions","_states","_utils","_guard","_auth","_attributes","_policy","_Login","_Logout","_NewPasswordRequired","_EmailVerification","_PasswordReset","_Confirm","Action","configure","config","type","startAuthentication","authenticated","user","loggingIn","attributes","login","creds","groups","logout","partialLogout","loginFailure","error","mfaRequired","newPasswordRequired","newPasswordRequiredFailure","emailVerificationRequired","emailVerificationFailed","beginPasswordResetFlow","continuePasswordResetFlow","finishPasswordResetFlow","updateAttributes","confirmationRequired","email","confirmFailed","clearCache","mkAttrList","getUserAttributes","sendAttributeVerificationCode","undefined","attribute","Promise","resolve","reject","getAttributeVerificationCode","onSuccess","inputVerificationCode","onFailure","message","result","i","length","name","getName","getValue","map","Name","Value","attributeList","err","emailVerificationFlow","registerUser","performLogin","authenticate","_amazonCognitoIdentityJs","_global","then","required","refreshIdentityCredentials","username","jwtToken","logins","buildLogins","CognitoIdentityCredentials","region","refresh","group","getSession","session","getIdToken","getJwtToken","getGroups","includes","getUsername","password","userPool","dispatch","AuthenticationDetails","Username","Password","CognitoUser","Pool","authenticateUser","code","signUp","userConfirmed","CognitoState","LOGGED_OUT","AUTHENTICATING","AUTHENTICATED","LOGGING_IN","LOGGED_IN","NEW_PASSWORD_REQUIRED","MFA_REQUIRED","EMAIL_VERIFICATION_REQUIRED","CONFIRMATION_REQUIRED","changePassword","oldPassword","newPassword","loginDomain","loginUrl","IdentityPoolId","identityPool","Logins","LoginId","payload","split","decodedToken","JSON","parse","util","base64","decode","toString","_interopRequireDefault","obj","__esModule","default","Confirm","_react","_react2","_reactRedux","BaseConfirm","props","cloneElement","children","onSubmit","onResend","onCancel","confirm","verificationCode","confirmRegistration","resend","resendConfirmationCode","mapStateToProps","state","cognito","mapDispatchToProps","confirmPartial","onResendPartial","mergeProps","stateProps","dispatchProps","ownProps","assign","connect","EmailVerification","verifyEmail","BaseEmailVerification","verifyAttribute","verifyPartial","Login","BaseLogin","userName","cache","authenticator","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","writable","configurable","setPrototypeOf","__proto__","Logout","_createClass","defineProperties","target","descriptor","protoProps","staticProps","_propTypes","_propTypes2","_React$Component","_ref","_temp","_this","_ret","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","onClick","event","store","context","getState","signOut","preventDefault","onLogout","Component","contextTypes","object","propTypes","any","isRequired","func","defaultProps","NewPasswordRequired","BaseNewPasswordRequired","setNewPassword","userAttributes","completeNewPasswordChallenge","setNewPasswordPartial","PasswordReset","BasePasswordReset","sendVerificationCode","setPassword","getUser","confirmPassword","forgotPassword","sendVerificationCodePartial","setPasswordPartial","testLoggedIn","wantLoggedIn","isLoggedIn","permitted","expr","loggedIn","guard","forbiddenUrl","replace","callback","dest","allow","createGuard","identityPoolLogin","fetchAttributes","direct","enable","setupCognito","f","params","subscribe","email_verified","listeners","initial","clientId","action","AWS","pool","CognitoUserPool","UserPoolId","ClientId","getCurrentUser","addAttributes","s","s2","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","invariant","condition","format","a","b","d","e","validateFormat","Error","argIndex","framesToPop","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","getShim","ReactPropTypes","array","bool","number","string","symbol","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":"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","file":"react-cognito.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-redux\"), require(\"amazon-cognito-identity-js\"), require(\"aws-sdk/global\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-redux\", \"amazon-cognito-identity-js\", \"aws-sdk/global\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCognito\"] = factory(require(\"react\"), require(\"react-redux\"), require(\"amazon-cognito-identity-js\"), require(\"aws-sdk/global\"));\n\telse\n\t\troot[\"ReactCognito\"] = factory(root[\"React\"], root[\"ReactRedux\"], root[\"AmazonCognitoIdentity\"], root[\"aws-sdk/global\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_9__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-redux\"), require(\"amazon-cognito-identity-js\"), require(\"aws-sdk/global\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-redux\", \"amazon-cognito-identity-js\", \"aws-sdk/global\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactCognito\"] = factory(require(\"react\"), require(\"react-redux\"), require(\"amazon-cognito-identity-js\"), require(\"aws-sdk/global\"));\n\telse\n\t\troot[\"ReactCognito\"] = factory(root[\"React\"], root[\"ReactRedux\"], root[\"AmazonCognitoIdentity\"], root[\"aws-sdk/global\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_9__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _reducers = __webpack_require__(18);\n\t\n\tObject.keys(_reducers).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _reducers[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tObject.keys(_actions).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _actions[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _states = __webpack_require__(6);\n\t\n\tObject.keys(_states).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _states[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _utils = __webpack_require__(8);\n\t\n\tObject.keys(_utils).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _utils[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _guard = __webpack_require__(16);\n\t\n\tObject.keys(_guard).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _guard[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _auth = __webpack_require__(5);\n\t\n\tObject.keys(_auth).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _auth[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _attributes = __webpack_require__(4);\n\t\n\tObject.keys(_attributes).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _attributes[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _policy = __webpack_require__(17);\n\t\n\tObject.keys(_policy).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _policy[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Login = __webpack_require__(12);\n\t\n\tObject.keys(_Login).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Login[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Logout = __webpack_require__(13);\n\t\n\tObject.keys(_Logout).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Logout[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _NewPasswordRequired = __webpack_require__(14);\n\t\n\tObject.keys(_NewPasswordRequired).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _NewPasswordRequired[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _EmailVerification = __webpack_require__(11);\n\t\n\tObject.keys(_EmailVerification).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _EmailVerification[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _PasswordReset = __webpack_require__(15);\n\t\n\tObject.keys(_PasswordReset).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _PasswordReset[key];\n\t    }\n\t  });\n\t});\n\t\n\tvar _Confirm = __webpack_require__(10);\n\t\n\tObject.keys(_Confirm).forEach(function (key) {\n\t  if (key === \"default\" || key === \"__esModule\") return;\n\t  Object.defineProperty(exports, key, {\n\t    enumerable: true,\n\t    get: function get() {\n\t      return _Confirm[key];\n\t    }\n\t  });\n\t});\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * container for all the actions\n\t*/\n\tvar Action = {\n\t\n\t  configure: function configure(config) {\n\t    return {\n\t      type: 'COGNITO_CONFIGURE',\n\t      config: config\n\t    };\n\t  },\n\t\n\t  startAuthentication: function startAuthentication() {\n\t    return {\n\t      type: 'COGNITO_AUTHENTICATING'\n\t    };\n\t  },\n\t\n\t  authenticated: function authenticated(user) {\n\t    return {\n\t      type: 'COGNITO_AUTHENTICATED',\n\t      user: user\n\t    };\n\t  },\n\t\n\t  loggingIn: function loggingIn(attributes) {\n\t    return {\n\t      type: 'COGNITO_LOGGING_IN',\n\t      attributes: attributes\n\t    };\n\t  },\n\t\n\t  login: function login(creds, attributes, groups) {\n\t    return {\n\t      type: 'COGNITO_LOGIN',\n\t      creds: creds,\n\t      groups: groups,\n\t      attributes: attributes\n\t    };\n\t  },\n\t\n\t  logout: function logout() {\n\t    return {\n\t      type: 'COGNITO_LOGOUT'\n\t    };\n\t  },\n\t\n\t  partialLogout: function partialLogout() {\n\t    return {\n\t      type: 'COGNITO_PARTIAL_LOGOUT'\n\t    };\n\t  },\n\t\n\t  loginFailure: function loginFailure(user, error) {\n\t    return {\n\t      type: 'COGNITO_LOGIN_FAILURE',\n\t      user: user,\n\t      error: error\n\t    };\n\t  },\n\t\n\t  mfaRequired: function mfaRequired(user) {\n\t    return {\n\t      type: 'COGNITO_LOGIN_MFA_REQUIRED',\n\t      user: user\n\t    };\n\t  },\n\t\n\t  newPasswordRequired: function newPasswordRequired(user) {\n\t    return {\n\t      type: 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED',\n\t      user: user\n\t    };\n\t  },\n\t\n\t  newPasswordRequiredFailure: function newPasswordRequiredFailure(user, error) {\n\t    return {\n\t      type: 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE',\n\t      user: user,\n\t      error: error\n\t    };\n\t  },\n\t\n\t  emailVerificationRequired: function emailVerificationRequired(attributes) {\n\t    return {\n\t      type: 'COGNITO_EMAIL_VERIFICATION_REQUIRED',\n\t      attributes: attributes\n\t    };\n\t  },\n\t\n\t  emailVerificationFailed: function emailVerificationFailed(user, error) {\n\t    return {\n\t      type: 'COGNITO_EMAIL_VERIFICATION_FAILED',\n\t      user: user,\n\t      error: error\n\t    };\n\t  },\n\t\n\t  beginPasswordResetFlow: function beginPasswordResetFlow(user, error) {\n\t    return {\n\t      type: 'COGNITO_BEGIN_PASSWORD_RESET_FLOW',\n\t      user: user,\n\t      error: error\n\t    };\n\t  },\n\t\n\t  continuePasswordResetFlow: function continuePasswordResetFlow(user) {\n\t    return {\n\t      type: 'COGNITO_CONTINUE_PASSWORD_RESET_FLOW',\n\t      user: user\n\t    };\n\t  },\n\t\n\t  finishPasswordResetFlow: function finishPasswordResetFlow(error) {\n\t    return {\n\t      type: 'COGNITO_FINISH_PASSWORD_RESET_FLOW',\n\t      error: error\n\t    };\n\t  },\n\t\n\t  updateAttributes: function updateAttributes(attributes) {\n\t    return {\n\t      type: 'COGNITO_UPDATE_USER_ATTRIBUTES',\n\t      attributes: attributes\n\t    };\n\t  },\n\t\n\t  confirmationRequired: function confirmationRequired(user, email) {\n\t    return {\n\t      type: 'COGNITO_USER_UNCONFIRMED',\n\t      user: user,\n\t      email: email\n\t    };\n\t  },\n\t\n\t  confirmFailed: function confirmFailed(user, error) {\n\t    return {\n\t      type: 'COGNITO_USER_CONFIRM_FAILED',\n\t      user: user,\n\t      error: error\n\t    };\n\t  },\n\t\n\t  clearCache: function clearCache() {\n\t    return {\n\t      type: 'COGNITO_CLEAR_CACHE'\n\t    };\n\t  }\n\t};\n\t\n\texports.Action = Action;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.mkAttrList = exports.updateAttributes = exports.getUserAttributes = exports.sendAttributeVerificationCode = undefined;\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\t/**\n\t * Request that a verification code is sent by email or SMS to verify\n\t * an attribute\n\t * @param {object} user - the cognito user object\n\t * @param {string} attribute - the attribute name\n\t*/\n\tvar sendAttributeVerificationCode = function sendAttributeVerificationCode(user, attribute) {\n\t  return new Promise(function (resolve, reject) {\n\t    user.getAttributeVerificationCode(attribute, {\n\t      onSuccess: function onSuccess() {\n\t        return resolve(false);\n\t      },\n\t      inputVerificationCode: function inputVerificationCode() {\n\t        return resolve(true);\n\t      },\n\t      onFailure: function onFailure(error) {\n\t        return reject(error.message);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Fetches the user attributes from Cognito, and turns them into\n\t * an object\n\t * @param {object} user - the cognito user object\n\t * @returns {Promise} resolves with the attributes or rejects with an error message\n\t*/\n\tvar getUserAttributes = function getUserAttributes(user) {\n\t  return new Promise(function (resolve, reject) {\n\t    return user.getUserAttributes(function (error, result) {\n\t      if (error) {\n\t        reject(error.message);\n\t      } else {\n\t        var attributes = {};\n\t        for (var i = 0; i < result.length; i += 1) {\n\t          var name = result[i].getName();\n\t          var value = result[i].getValue();\n\t          attributes[name] = value;\n\t        }\n\t        resolve(attributes);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * convert an attribute dictionary to an attribute list\n\t * @param {object} attributes - a dictionary of attributes\n\t * @return {array} AWS expected attribute list\n\t*/\n\tvar mkAttrList = function mkAttrList(attributes) {\n\t  return Object.keys(attributes).map(function (key) {\n\t    return {\n\t      Name: key,\n\t      Value: attributes[key]\n\t    };\n\t  });\n\t};\n\t\n\t/**\n\t * update the attributes in Cognito\n\t * @param {object} user - the CognitoUser object\n\t * @param {object} attributes - an attributes dictionary with the attributes to be updated\n\t * @return {Promise<object>} a promise that resolves to a redux action\n\t*/\n\tvar updateAttributes = function updateAttributes(user, attributes) {\n\t  return new Promise(function (resolve, reject) {\n\t    var attributeList = mkAttrList(attributes);\n\t    user.updateAttributes(attributeList, function (err) {\n\t      if (err) {\n\t        reject(err.message);\n\t      } else {\n\t        resolve(_actions.Action.updateAttributes(attributes));\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\texports.sendAttributeVerificationCode = sendAttributeVerificationCode;\n\texports.getUserAttributes = getUserAttributes;\n\texports.updateAttributes = updateAttributes;\n\texports.mkAttrList = mkAttrList;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.emailVerificationFlow = exports.registerUser = exports.performLogin = exports.authenticate = undefined;\n\t\n\tvar _amazonCognitoIdentityJs = __webpack_require__(7);\n\t\n\tvar _global = __webpack_require__(9);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tvar _attributes = __webpack_require__(4);\n\t\n\tvar _utils = __webpack_require__(8);\n\t\n\t/**\n\t * sends the email verification code and transitions to the correct state\n\t * @param {object} user - the CognitoUser object\n\t * @param {object} attributes - the attributes dictionary\n\t * @return {Promise<object>} a promise that resolves to a redux action\n\t*/\n\tvar emailVerificationFlow = function emailVerificationFlow(user, attributes) {\n\t  return new Promise(function (resolve) {\n\t    return (0, _attributes.sendAttributeVerificationCode)(user, 'email').then(function (required) {\n\t      if (required) {\n\t        resolve(_actions.Action.emailVerificationRequired(attributes));\n\t      } else {\n\t        // dead end?\n\t        resolve(_actions.Action.loggingIn(attributes));\n\t      }\n\t    }, function (error) {\n\t      // some odd classes of error here\n\t      resolve(_actions.Action.emailVerificationFailed(error, attributes));\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * logs in to the federated identity pool with a JWT\n\t * @param {string} username - the username\n\t * @param {string} jwtToken - a token from the session\n\t * @param {object} config - the react-cognito config\n\t * @return {Promise<object>} a promise that resolves to the federated identity credentials\n\t*/\n\tvar refreshIdentityCredentials = function refreshIdentityCredentials(username, jwtToken, config) {\n\t  return new Promise(function (resolve, reject) {\n\t    var logins = (0, _utils.buildLogins)(username, jwtToken, config);\n\t    var creds = new _global.CognitoIdentityCredentials(logins, { region: config.region });\n\t    creds.refresh(function (error) {\n\t      if (error) {\n\t        reject(error.message);\n\t      } else {\n\t        resolve(creds);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * establishes a session with the user pool, and logs into the federated identity\n\t * pool using a token from the session\n\t * @param {object} user - the CognitoUser object\n\t * @param {object} config -the react-cognito config\n\t * @return {Promise<object>} an action to be dispatched\n\t*/\n\tvar performLogin = function performLogin(user, config, group) {\n\t  return new Promise(function (resolve, reject) {\n\t    if (user === null) {\n\t      resolve(_actions.Action.logout());\n\t    } else {\n\t      user.getSession(function (err, session) {\n\t        if (err) {\n\t          resolve(_actions.Action.loginFailure(user, err.message));\n\t        } else {\n\t          var jwtToken = session.getIdToken().getJwtToken();\n\t          var groups = (0, _utils.getGroups)(jwtToken);\n\t          if (group && !groups.includes(group)) {\n\t            return resolve(_actions.Action.loginFailure(user, 'Insufficient privilege'));\n\t          }\n\t\n\t          var username = user.getUsername();\n\t          refreshIdentityCredentials(username, jwtToken, config).then(function (creds) {\n\t            (0, _attributes.getUserAttributes)(user).then(function (attributes) {\n\t              resolve(_actions.Action.login(creds, attributes, groups));\n\t            });\n\t          }, function (message) {\n\t            return resolve(_actions.Action.loginFailure(user, message));\n\t          });\n\t        }\n\t      });\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t *\n\t * Authenticates with a user pool, and handles responses.\n\t * if the authentication is successful it then logs in to the\n\t * identity pool.\n\t *\n\t * returns an action depending on the outcome.  Possible actions returned\n\t * are:\n\t *\n\t * - login - valid user who is logged in\n\t * - loginFailure - failed to authenticate with user pool or identity pool\n\t * - mfaRequired - user now needs to enter MFA\n\t * - newPasswordRequired - user must change password on first login\n\t * - emailVerificationRequired - user must verify their email address\n\t * - emailVerificationFailed - email verification is required, but won't work\n\t *\n\t * Dispatch the resulting action, e.g.:\n\t *\n\t * ```\n\t * const { userPool, config } = state.cognito;\n\t * authenticate(username, password, userPool, config).then(dispatch);\n\t * ```\n\t *\n\t * @param {string} username - the username provided by the user\n\t * @param {string} password - the password provided by the user\n\t * @param {object} userPool - a Cognito User Pool object\n\t * @return {Promise<object>} - a promise that resolves an action to be dispatched\n\t *\n\t*/\n\tvar authenticate = function authenticate(username, password, userPool, config, dispatch) {\n\t  return new Promise(function (resolve, reject) {\n\t    var creds = new _amazonCognitoIdentityJs.AuthenticationDetails({\n\t      Username: username,\n\t      Password: password\n\t    });\n\t\n\t    var user = new _amazonCognitoIdentityJs.CognitoUser({\n\t      Username: username,\n\t      Pool: userPool\n\t    });\n\t\n\t    dispatch(_actions.Action.startAuthentication());\n\t\n\t    user.authenticateUser(creds, {\n\t      onSuccess: function onSuccess() {\n\t        dispatch(_actions.Action.authenticated(user));\n\t        resolve();\n\t      },\n\t      onFailure: function onFailure(error) {\n\t        if (error.code === 'UserNotConfirmedException') {\n\t          dispatch(_actions.Action.confirmationRequired(user));\n\t          resolve();\n\t        } else {\n\t          dispatch(_actions.Action.loginFailure(user, error.message));\n\t          reject(error);\n\t        }\n\t      },\n\t      mfaRequired: function mfaRequired() {\n\t        dispatch(_actions.Action.mfaRequired(user));\n\t        resolve();\n\t      },\n\t      newPasswordRequired: function newPasswordRequired() {\n\t        dispatch(_actions.Action.newPasswordRequired(user));\n\t        resolve();\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * sign up this user with the user pool provided\n\t * @param {object} userPool - a Cognito userpool (e.g. state.cognito.userPool)\n\t * @param {object} config - the react-cognito config object\n\t * @param {string} username - the username\n\t * @param {string} password - the password\n\t * @param {object} attributes - an attributes dictionary\n\t * @return {Promise<object>} a promise that resolves a redux action\n\t*/\n\tvar registerUser = function registerUser(userPool, config, username, password, attributes) {\n\t  return new Promise(function (resolve, reject) {\n\t    return userPool.signUp(username, password, (0, _attributes.mkAttrList)(attributes), null, function (err, result) {\n\t      if (err) {\n\t        reject(err.message);\n\t      } else if (result.userConfirmed === false) {\n\t        resolve(_actions.Action.confirmationRequired(result.user, attributes.email));\n\t      } else {\n\t        resolve(authenticate(username, password, userPool));\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\texports.authenticate = authenticate;\n\texports.performLogin = performLogin;\n\texports.registerUser = registerUser;\n\texports.emailVerificationFlow = emailVerificationFlow;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t/** states stored in store.cognito.state */\n\tvar CognitoState = exports.CognitoState = {\n\t  LOGGED_OUT: 'LOGGED_OUT',\n\t  AUTHENTICATING: 'AUTHENTICATING',\n\t  AUTHENTICATED: 'AUTHENTICATED',\n\t  LOGGING_IN: 'LOGGING_IN',\n\t  LOGGED_IN: 'LOGGED_IN',\n\t  NEW_PASSWORD_REQUIRED: 'NEW_PASSWORD_REQUIRED',\n\t  MFA_REQUIRED: 'MFA_REQUIRED',\n\t  EMAIL_VERIFICATION_REQUIRED: 'EMAIL_VERIFICATION_REQUIRED',\n\t  CONFIRMATION_REQUIRED: 'CONFIRMATION_REQUIRED'\n\t};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getGroups = exports.buildLogins = exports.changePassword = undefined;\n\t\n\tvar _global = __webpack_require__(9);\n\t\n\t/**\n\t * Change a user's password\n\t * @param {object} user - the cognito user object\n\t * @param {string} oldPassword - the current password\n\t * @param {string} newPassword - the new password\n\t*/\n\tvar changePassword = function changePassword(user, oldPassword, newPassword) {\n\t  return new Promise(function (resolve, reject) {\n\t    return user.changePassword(oldPassword, newPassword, function (err, result) {\n\t      if (err) {\n\t        reject(err.message);\n\t      } else {\n\t        resolve(result);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * builds the federated identity pool login structure\n\t * @param {string} username - the username of the user\n\t * @param {string} jwtToken - a JWT Token from the session\n\t * @param {object} config - the cognito react config object\n\t*/\n\tvar buildLogins = function buildLogins(username, jwtToken, config) {\n\t  var loginDomain = 'cognito-idp.' + config.region + '.amazonaws.com';\n\t  var loginUrl = loginDomain + '/' + config.userPool;\n\t  var creds = {\n\t    IdentityPoolId: config.identityPool,\n\t    Logins: {},\n\t    LoginId: username // https://github.com/aws/aws-sdk-js/issues/609\n\t  };\n\t  creds.Logins[loginUrl] = jwtToken;\n\t  return creds;\n\t};\n\t\n\t/**\n\t * Decode a jwtToken to check for cognito:groups\n\t * @param {string} jwtToken - a JWT Token from the session\n\t */\n\tvar getGroups = function getGroups(jwtToken) {\n\t  var payload = jwtToken.split('.')[1];\n\t  var decodedToken = JSON.parse(_global.util.base64.decode(payload).toString('utf8'));\n\t  // decodedToken['cognito:groups'] can be undefined if user is in no groups\n\t  if (!decodedToken['cognito:groups']) {\n\t    return [];\n\t  }\n\t  return decodedToken['cognito:groups'];\n\t};\n\t\n\texports.changePassword = changePassword;\n\texports.buildLogins = buildLogins;\n\texports.getGroups = getGroups;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Confirm = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(3);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BaseConfirm = function BaseConfirm(props) {\n\t  return _react2.default.cloneElement(props.children, {\n\t    error: props.error,\n\t    onSubmit: props.onSubmit,\n\t    onResend: props.onResend,\n\t    onCancel: props.onCancel\n\t  });\n\t};\n\t\n\tvar confirm = function confirm(verificationCode, user, dispatch) {\n\t  return new Promise(function (resolve, reject) {\n\t    user.confirmRegistration(verificationCode, true, function (error) {\n\t      if (error) {\n\t        dispatch(_actions.Action.confirmFailed(user));\n\t        reject(error.message);\n\t      } else {\n\t        dispatch(_actions.Action.partialLogout());\n\t        resolve(user);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tvar resend = function resend(user, dispatch) {\n\t  return new Promise(function (resolve, reject) {\n\t    user.resendConfirmationCode(function (err) {\n\t      if (err) {\n\t        dispatch(_actions.Action.confirmationRequired(user));\n\t        reject(err.message);\n\t      } else {\n\t        dispatch(_actions.Action.confirmationRequired(user));\n\t        resolve(user);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tvar mapStateToProps = function mapStateToProps(state) {\n\t  return {\n\t    error: state.cognito.error,\n\t    user: state.cognito.user\n\t  };\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    confirmPartial: function confirmPartial(verificationCode, user) {\n\t      return confirm(verificationCode, user, dispatch);\n\t    },\n\t    onCancel: function onCancel() {\n\t      return dispatch(_actions.Action.logout());\n\t    },\n\t    onResendPartial: function onResendPartial(user) {\n\t      return resend(user, dispatch);\n\t    }\n\t  };\n\t};\n\t\n\tvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n\t  return Object.assign({}, ownProps, stateProps, dispatchProps, {\n\t    onSubmit: function onSubmit(verificationCode) {\n\t      return dispatchProps.confirmPartial(verificationCode, stateProps.user);\n\t    },\n\t    onResend: function onResend() {\n\t      return dispatchProps.onResendPartial(stateProps.user);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Container for a confirmation form.  Magically adds the following props to the \n\t * contained form:\n\t *\n\t *  * user - the Cognito User from the redux store\n\t *  * error - the persisted error from the redux store\n\t *  * onSubmit - a handler that calls the Cognito confirm API\n\t *  * onResend - a handler that calls the Cognito resend request API\n\t *  * onCancel - Logs the user out completely\n\t *\n\t * @example\n\t * <Confirm>\n\t *   <ConfirmForm />\n\t * </Confirm>\n\t *\n\t */\n\tvar Confirm = exports.Confirm = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BaseConfirm);\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.EmailVerification = exports.verifyEmail = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(3);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BaseEmailVerification = function BaseEmailVerification(props) {\n\t  return _react2.default.cloneElement(props.children, {\n\t    error: props.error,\n\t    onSubmit: props.onSubmit,\n\t    onCancel: props.onCancel\n\t  });\n\t};\n\t\n\tvar verifyEmail = exports.verifyEmail = function verifyEmail(verificationCode, user, dispatch) {\n\t  return new Promise(function (resolve, reject) {\n\t    user.verifyAttribute('email', verificationCode, {\n\t      onSuccess: function onSuccess() {\n\t        dispatch(_actions.Action.login(user));\n\t        resolve();\n\t      },\n\t      inputVerificationCode: function inputVerificationCode() {\n\t        dispatch(_actions.Action.emailVerificationRequired(user));\n\t        reject();\n\t      },\n\t      onFailure: function onFailure(error) {\n\t        dispatch(_actions.Action.emailVerificationFailed(user, error.message));\n\t        reject();\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tvar mapStateToProps = function mapStateToProps(state) {\n\t  return {\n\t    error: state.cognito.error,\n\t    user: state.cognito.user\n\t  };\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    verifyPartial: function verifyPartial(verificationCode, user) {\n\t      return verifyEmail(verificationCode, user, dispatch);\n\t    },\n\t    onCancel: function onCancel() {\n\t      return dispatch(_actions.Action.logout());\n\t    }\n\t  };\n\t};\n\t\n\tvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n\t  return Object.assign({}, ownProps, stateProps, dispatchProps, {\n\t    onSubmit: function onSubmit(verificationCode) {\n\t      return dispatchProps.verifyPartial(verificationCode, stateProps.user);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Wrapper for an Email Verification Form.\n\t * Magically adds the following props to the contained form:\n\t *\n\t *  * user - the Cognito user from the Redux store\n\t *  * error - the persisted error from the Redux store\n\t *  * onSubmit - a handler that calls the Cognito verification API\n\t *\n\t * @example\n\t * <EmailVerification>\n\t *   <EmailVerificationForm />\n\t * </EmailVerification>\n\t *\n\t */\n\tvar EmailVerification = exports.EmailVerification = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BaseEmailVerification);\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Login = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(3);\n\t\n\tvar _auth = __webpack_require__(5);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BaseLogin = function BaseLogin(props) {\n\t  return _react2.default.cloneElement(props.children, {\n\t    username: props.username,\n\t    email: props.email,\n\t    onSubmit: props.onSubmit,\n\t    clearCache: props.clearCache,\n\t    error: props.error\n\t  });\n\t};\n\t\n\tvar mapStateToProps = function mapStateToProps(state) {\n\t  var username = '';\n\t  if (state.cognito.user) {\n\t    username = state.cognito.user.getUsername();\n\t  } else if (state.cognito.userName) {\n\t    username = state.cognito.cache.userName;\n\t  }\n\t  return {\n\t    username: username,\n\t    email: state.cognito.cache.email,\n\t    config: state.cognito.config,\n\t    userPool: state.cognito.userPool,\n\t    error: state.cognito.error\n\t  };\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    authenticator: function authenticator(username, password, userPool, config) {\n\t      return (0, _auth.authenticate)(username, password, userPool, config, dispatch);\n\t    },\n\t    clearCache: function clearCache() {\n\t      return dispatch(_actions.Action.clearCache());\n\t    }\n\t  };\n\t};\n\t\n\tvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n\t  return Object.assign({}, ownProps, stateProps, {\n\t    onSubmit: function onSubmit(username, password) {\n\t      return dispatchProps.authenticator(username, password, stateProps.userPool, stateProps.config);\n\t    },\n\t    clearCache: dispatchProps.clearCache\n\t  });\n\t};\n\t\n\t/**\n\t * Container for login behaviour, wrapping a login form.\n\t *\n\t * Magically provides the following props to the wrapped form:\n\t *\n\t *  * username\n\t *  * onSubmit\n\t *\n\t * @example\n\t * <Login>\n\t *   <LoginForm />\n\t * </Login>\n\t */\n\tvar Login = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BaseLogin);\n\t\n\texports.Login = Login;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Logout = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(22);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * Container for logout behaviour.\n\t * @example\n\t * <Logout onLogout={handler}>\n\t *   <LogoutForm />\n\t * </Logout>\n\t */\n\tvar Logout = exports.Logout = function (_React$Component) {\n\t  _inherits(Logout, _React$Component);\n\t\n\t  function Logout() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, Logout);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Logout.__proto__ || Object.getPrototypeOf(Logout)).call.apply(_ref, [this].concat(args))), _this), _this.onClick = function (event) {\n\t      var store = _this.context.store;\n\t\n\t      var state = store.getState();\n\t      state.cognito.user.signOut();\n\t      event.preventDefault();\n\t      store.dispatch(_actions.Action.logout());\n\t      _this.props.onLogout();\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * Passed to child element as onClick prop.\n\t   * Signs the user out, and then dispatches the logout action\n\t   * If you want to take further actions (like reloading UI) then add an\n\t   * onLogout property to the Logout element\n\t   */\n\t\n\t\n\t  _createClass(Logout, [{\n\t    key: 'render',\n\t\n\t\n\t    /**\n\t     * renders the child element, adding an onClick property\n\t     */\n\t    value: function render() {\n\t      return _react2.default.cloneElement(this.props.children, {\n\t        onClick: this.onClick\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Logout;\n\t}(_react2.default.Component);\n\t\n\tLogout.contextTypes = {\n\t  store: _propTypes2.default.object\n\t};\n\tLogout.propTypes = {\n\t  children: _propTypes2.default.any.isRequired,\n\t  onLogout: _propTypes2.default.func\n\t};\n\tLogout.defaultProps = {\n\t  onLogout: function onLogout() {}\n\t};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.NewPasswordRequired = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(3);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BaseNewPasswordRequired = function BaseNewPasswordRequired(props) {\n\t  return _react2.default.cloneElement(props.children, {\n\t    error: props.error,\n\t    onSubmit: props.onSubmit\n\t  });\n\t};\n\t\n\tvar setNewPassword = function setNewPassword(password, user, config, userAttributes, dispatch) {\n\t  return new Promise(function (resolve, reject) {\n\t    user.completeNewPasswordChallenge(password, userAttributes, {\n\t      onSuccess: function onSuccess() {\n\t        dispatch(_actions.Action.authenticated(user));\n\t        resolve();\n\t      },\n\t      onFailure: function onFailure(error) {\n\t        dispatch(_actions.Action.newPasswordRequiredFailure(user, error.message));\n\t        reject(error);\n\t      },\n\t      mfaRequired: function mfaRequired() {\n\t        dispatch(_actions.Action.mfaRequired(user));\n\t        resolve();\n\t      },\n\t      newPasswordRequired: function newPasswordRequired() {\n\t        dispatch(_actions.Action.newPasswordRequired(user));\n\t        resolve();\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tvar mapStateToProps = function mapStateToProps(state) {\n\t  return {\n\t    error: state.cognito.error,\n\t    user: state.cognito.user,\n\t    config: state.cognito.config\n\t  };\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    setNewPasswordPartial: function setNewPasswordPartial(password, user, config, userAttributes) {\n\t      return setNewPassword(password, user, config, userAttributes, dispatch);\n\t    }\n\t  };\n\t};\n\t\n\tvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n\t  return Object.assign({}, ownProps, stateProps, {\n\t    onSubmit: function onSubmit(password, userAttributes) {\n\t      return dispatchProps.setNewPasswordPartial(password, stateProps.user, stateProps.config, userAttributes);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Wrapper for a New Password Required form\n\t *\n\t * Magically provides the following props to the wrapped element:\n\t *\n\t * * user - the Cognito user\n\t * * error - the persistent react-cognito error message\n\t * * onSubmit - a handler that calls the Set New Password API\n\t *\n\t * @example\n\t *\n\t * <NewPasswordRequired>\n\t *   <NewPasswordRequiredForm />\n\t * </NewPasswordRequired>\n\t */\n\tvar NewPasswordRequired = exports.NewPasswordRequired = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BaseNewPasswordRequired);\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PasswordReset = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactRedux = __webpack_require__(3);\n\t\n\tvar _amazonCognitoIdentityJs = __webpack_require__(7);\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar BasePasswordReset = function BasePasswordReset(props) {\n\t  return _react2.default.cloneElement(props.children, {\n\t    username: props.username,\n\t    sendVerificationCode: props.sendVerificationCode,\n\t    setPassword: props.setPassword\n\t  });\n\t};\n\t\n\tvar getUser = function getUser(username, userPool) {\n\t  var user = new _amazonCognitoIdentityJs.CognitoUser({\n\t    Username: username,\n\t    Pool: userPool\n\t  });\n\t  return user;\n\t};\n\t\n\tvar setPassword = function setPassword(username, userPool, code, password, dispatch) {\n\t  return new Promise(function (resolve, reject) {\n\t    var user = getUser(username, userPool);\n\t    user.confirmPassword(code, password, {\n\t      onSuccess: function onSuccess() {\n\t        dispatch(_actions.Action.finishPasswordResetFlow()), resolve();\n\t      },\n\t      onFailure: function onFailure(err) {\n\t        dispatch(_actions.Action.beginPasswordResetFlow(user, err.message)), reject(err);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tvar sendVerificationCode = function sendVerificationCode(username, userPool, dispatch) {\n\t  return new Promise(function (resolve, reject) {\n\t    var user = getUser(username, userPool);\n\t    user.forgotPassword({\n\t      onSuccess: function onSuccess() {\n\t        dispatch(_actions.Action.continuePasswordResetFlow(user));\n\t        resolve();\n\t      },\n\t      onFailure: function onFailure(err) {\n\t        dispatch(_actions.Action.beginPasswordResetFlow(user, err.message));\n\t        reject(err);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tvar mapStateToProps = function mapStateToProps(state) {\n\t  var props = {\n\t    user: state.cognito.user,\n\t    username: '',\n\t    userPool: state.cognito.userPool\n\t  };\n\t  if (state.cognito.user != null) {\n\t    props.username = state.cognito.user.getUsername();\n\t  }\n\t  return props;\n\t};\n\t\n\tvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n\t  return {\n\t    sendVerificationCodePartial: function sendVerificationCodePartial(username, userPool) {\n\t      return sendVerificationCode(username, userPool, dispatch);\n\t    },\n\t    setPasswordPartial: function setPasswordPartial(user, userPool, code, password) {\n\t      return setPassword(user, userPool, code, password, dispatch);\n\t    }\n\t  };\n\t};\n\t\n\tvar mergeProps = function mergeProps(stateProps, dispatchProps, ownProps) {\n\t  return Object.assign({}, ownProps, stateProps, {\n\t    sendVerificationCode: function sendVerificationCode(username) {\n\t      return dispatchProps.sendVerificationCodePartial(username, stateProps.userPool);\n\t    },\n\t    setPassword: function setPassword(username, code, password) {\n\t      return dispatchProps.setPasswordPartial(username, stateProps.userPool, code, password);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Container for a Password Reset form\n\t *\n\t * Magically provides the following props to the wrapped element:\n\t *\n\t *  * user\n\t *  * username\n\t *  * sendVerificationCode\n\t *  * setPassword\n\t *\n\t * @example\n\t * <PasswordReset>\n\t *   <PasswordResetForm />\n\t * </PasswordReset>\n\t */\n\tvar PasswordReset = exports.PasswordReset = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps, mergeProps)(BasePasswordReset);\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t/*\n\t Default behaviour is to restrict access to only logged in users\n\t*/\n\t\n\tvar testLoggedIn = function testLoggedIn(state, wantLoggedIn) {\n\t  var isLoggedIn = state.cognito.user !== null;\n\t  if (isLoggedIn && wantLoggedIn) {\n\t    return true;\n\t  }\n\t  if (!isLoggedIn && !wantLoggedIn) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tvar permitted = function permitted(state, expr) {\n\t  return new Promise(function (resolve) {\n\t    if (expr.loggedIn !== undefined) {\n\t      resolve(testLoggedIn(state, expr.loggedIn));\n\t    } else {\n\t      resolve(testLoggedIn(state, true));\n\t    }\n\t  });\n\t};\n\t\n\tvar guard = function guard(store, forbiddenUrl) {\n\t  var expr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t  var routeState = arguments[3];\n\t  var replace = arguments[4];\n\t  var callback = arguments[5];\n\t\n\t  var state = store.getState();\n\t  var dest = forbiddenUrl;\n\t\n\t  if (expr.forbiddenUrl !== undefined) {\n\t    dest = expr.forbiddenUrl;\n\t  }\n\t  permitted(state, expr).then(function (allow) {\n\t    if (!allow) {\n\t      replace(dest);\n\t    }\n\t    callback();\n\t  });\n\t};\n\t\n\t/**\n\t * creates a guard function you can use in <Route> tags\n\t * @param {object} store - the redux store\n\t * @param {string} forbiddenUrl - the default url to navigate to if forbidden\n\t * @returns {function} - a function that can be provided to onEnter\n\t*/\n\tvar createGuard = function createGuard(store, forbiddenUrl) {\n\t  return function (expr) {\n\t    return function (state, replace, callback) {\n\t      return guard(store, forbiddenUrl, expr, state, replace, callback);\n\t    };\n\t  };\n\t};\n\t\n\texports.createGuard = createGuard;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.identityPoolLogin = exports.emailVerificationRequired = exports.fetchAttributes = exports.direct = exports.enable = exports.setupCognito = undefined;\n\t\n\tvar _actions = __webpack_require__(1);\n\t\n\tvar _attributes = __webpack_require__(4);\n\t\n\tvar _auth = __webpack_require__(5);\n\t\n\tvar _states = __webpack_require__(6);\n\t\n\t/**\n\t * subscribes a \"policy\" function to the store, and calls it\n\t * with the state and the dispatch function\n\t * @param {object} store - the redux store\n\t * @param {function} f - f(state, dispatch)\n\t*/\n\tvar enable = function enable(store, f, params) {\n\t  store.subscribe(function () {\n\t    var state = store.getState();\n\t    var dispatch = store.dispatch;\n\t    f(state, dispatch, params);\n\t  });\n\t};\n\t\n\t/**\n\t * requires email verification before transitioning from AUTHENTICATED\n\t * @param {object} state - the redux store state\n\t * @param {function} dispatch - the dispatch function\n\t*/\n\tvar emailVerificationRequired = function emailVerificationRequired(state, dispatch) {\n\t  if (state.cognito.state === _states.CognitoState.AUTHENTICATED) {\n\t    var user = state.cognito.user;\n\t    (0, _attributes.getUserAttributes)(user).then(function (attributes) {\n\t      if (attributes.email_verified !== 'true') {\n\t        (0, _auth.emailVerificationFlow)(user, attributes).then(dispatch);\n\t      } else {\n\t        dispatch(_actions.Action.loggingIn(attributes));\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * fetches and stores attributes before transitioning from AUTHENTICATED\n\t * @param {object} state - the redux store state\n\t * @param {function} dispatch - the dispatch function\n\t*/\n\tvar fetchAttributes = function fetchAttributes(state, dispatch) {\n\t  if (state.cognito.state === _states.CognitoState.AUTHENTICATED) {\n\t    var user = state.cognito.user;\n\t    (0, _attributes.getUserAttributes)(user).then(function (attributes) {\n\t      dispatch(_actions.Action.loggingIn(attributes));\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * transitions directly from AUTHENTICATED to LOGGING_IN\n\t * @param {object} state - the redux store state\n\t * @param {function} dispatch - the dispatch function\n\t*/\n\tvar direct = function direct(state, dispatch) {\n\t  if (state.cognito.state === _states.CognitoState.AUTHENTICATED) {\n\t    dispatch(_actions.Action.loggingIn());\n\t  }\n\t};\n\t\n\t/**\n\t * logs into the single federated identity pool to transition from LOGGING_IN\n\t * to LOGGED_IN\n\t * @param {object} state - the redux store state\n\t * @param {function} dispatch - the dispatch function\n\t*/\n\tvar identityPoolLogin = function identityPoolLogin(state, dispatch, group) {\n\t  if (state.cognito.state === _states.CognitoState.LOGGING_IN) {\n\t    (0, _auth.performLogin)(state.cognito.user, state.cognito.config, group).then(dispatch);\n\t  }\n\t};\n\t\n\t/**\n\t * sets up react-cognito with default policies.\n\t*/\n\tvar setupCognito = function setupCognito(store, config) {\n\t  var listeners = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [emailVerificationRequired, identityPoolLogin];\n\t\n\t  store.dispatch(_actions.Action.configure(config));\n\t  listeners.forEach(function (f) {\n\t    enable(store, f, config.group);\n\t  });\n\t  store.dispatch(_actions.Action.loggingIn({}));\n\t};\n\t\n\texports.setupCognito = setupCognito;\n\texports.enable = enable;\n\texports.direct = direct;\n\texports.fetchAttributes = fetchAttributes;\n\texports.emailVerificationRequired = emailVerificationRequired;\n\texports.identityPoolLogin = identityPoolLogin;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.cognito = undefined;\n\t\n\tvar _amazonCognitoIdentityJs = __webpack_require__(7);\n\t\n\tvar _states = __webpack_require__(6);\n\t\n\t/* global AWS */\n\t\n\tvar initial = {\n\t  user: null,\n\t  cache: { // cached for post register login\n\t    userName: null,\n\t    email: null\n\t  },\n\t  state: _states.CognitoState.LOGGED_OUT,\n\t  error: '',\n\t  userPool: null,\n\t  attributes: {},\n\t  creds: null,\n\t  groups: [],\n\t  config: {\n\t    region: null,\n\t    userPool: null,\n\t    clientId: null,\n\t    identityPool: null\n\t  }\n\t};\n\t\n\tvar configure = function configure(state, action) {\n\t  // surprise side-effect!\n\t  AWS.config.region = action.config.region;\n\t  var pool = new _amazonCognitoIdentityJs.CognitoUserPool({\n\t    UserPoolId: action.config.userPool,\n\t    ClientId: action.config.clientId\n\t  });\n\t  var user = pool.getCurrentUser();\n\t  return Object.assign({}, state, {\n\t    config: action.config,\n\t    userPool: pool,\n\t    user: user\n\t  });\n\t};\n\t\n\t// sometimes we don't get the attributes in later parts of the login flow\n\t// but lets not clobber the ones we've got if we've not got them\n\tvar addAttributes = function addAttributes(s, attributes) {\n\t  var s2 = Object.assign({}, s);\n\t  if (attributes) {\n\t    s2.attributes = attributes;\n\t  }\n\t  return s2;\n\t};\n\t\n\t/**\n\t * reducer function to be passed to redux combineReducers\n\t * @param {object} state\n\t * @param {object} action\n\t*/\n\t\n\tvar cognito = exports.cognito = function cognito() {\n\t  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n\t  var action = arguments[1];\n\t\n\t  switch (action.type) {\n\t\n\t    case 'COGNITO_CONFIGURE':\n\t      return configure(state, action);\n\t\n\t    case 'COGNITO_AUTHENTICATING':\n\t      return Object.assign({}, state, {\n\t        state: _states.CognitoState.AUTHENTICATING\n\t      });\n\t\n\t    case 'COGNITO_AUTHENTICATED':\n\t      return Object.assign({}, state, {\n\t        user: action.user,\n\t        cache: {\n\t          userName: null,\n\t          email: null\n\t        },\n\t        error: '',\n\t        state: _states.CognitoState.AUTHENTICATED\n\t      });\n\t\n\t    case 'COGNITO_CLEAR_CACHE':\n\t      return Object.assign({}, state, {\n\t        cache: {\n\t          userName: null,\n\t          email: null\n\t        }\n\t      });\n\t\n\t    case 'COGNITO_LOGGING_IN':\n\t      return Object.assign({}, state, {\n\t        state: _states.CognitoState.LOGGING_IN,\n\t        attributes: action.attributes\n\t      });\n\t\n\t    case 'COGNITO_LOGIN':\n\t      return Object.assign({}, state, addAttributes({\n\t        error: '',\n\t        creds: action.creds,\n\t        groups: action.groups,\n\t        state: _states.CognitoState.LOGGED_IN\n\t      }, action.attributes));\n\t\n\t    case 'COGNITO_LOGOUT':\n\t      return Object.assign({}, state, {\n\t        user: null,\n\t        attributes: {},\n\t        error: '',\n\t        creds: null,\n\t        groups: [],\n\t        state: _states.CognitoState.LOGGED_OUT\n\t      });\n\t\n\t    case 'COGNITO_PARTIAL_LOGOUT':\n\t      return Object.assign({}, state, {\n\t        user: null,\n\t        userName: state.user.username,\n\t        error: '',\n\t        creds: null,\n\t        groups: [],\n\t        state: _states.CognitoState.LOGGED_OUT\n\t      });\n\t\n\t    case 'COGNITO_LOGIN_FAILURE':\n\t      return Object.assign({}, state, {\n\t        user: action.user,\n\t        state: _states.CognitoState.LOGGED_OUT,\n\t        error: action.error\n\t      });\n\t\n\t    case 'COGNITO_LOGIN_MFA_REQUIRED':\n\t      return Object.assign({}, state, {\n\t        user: action.user,\n\t        error: '',\n\t        state: _states.CognitoState.MFA_REQUIRED\n\t      });\n\t\n\t    case 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED':\n\t      return Object.assign({}, state, {\n\t        user: action.user,\n\t        error: '',\n\t        state: _states.CognitoState.NEW_PASSWORD_REQUIRED\n\t      });\n\t\n\t    case 'COGNITO_USER_UNCONFIRMED':\n\t      return Object.assign({}, state, {\n\t        user: action.user,\n\t        state: _states.CognitoState.CONFIRMATION_REQUIRED,\n\t        cache: {\n\t          userName: action.user.username,\n\t          email: action.email ? action.email : state.cache.email\n\t        }\n\t      });\n\t\n\t    case 'COGNITO_USER_CONFIRM_FAILED':\n\t      return Object.assign({}, state, {\n\t        user: action.user,\n\t        state: _states.CognitoState.CONFIRMATION_REQUIRED,\n\t        error: action.error\n\t      });\n\t\n\t    case 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE':\n\t      return Object.assign({}, state, {\n\t        error: action.error,\n\t        state: _states.CognitoState.NEW_PASSWORD_REQUIRED\n\t      });\n\t\n\t    case 'COGNITO_EMAIL_VERIFICATION_REQUIRED':\n\t      return Object.assign({}, state, addAttributes({\n\t        error: '',\n\t        state: _states.CognitoState.EMAIL_VERIFICATION_REQUIRED\n\t      }, action.attributes));\n\t\n\t    case 'COGNITO_EMAIL_VERIFICATION_FAILED':\n\t      return Object.assign({}, state, addAttributes({\n\t        error: action.error,\n\t        state: _states.CognitoState.EMAIL_VERIFICATION_REQUIRED\n\t      }, action.attributes));\n\t\n\t    case 'COGNITO_BEGIN_PASSWORD_RESET_FLOW':\n\t      return Object.assign({}, state, {\n\t        error: action.error\n\t      });\n\t\n\t    case 'COGNITO_CONTINUE_PASSWORD_RESET_FLOW':\n\t      return state;\n\t\n\t    case 'COGNITO_FINISH_PASSWORD_RESET_FLOW':\n\t      return state;\n\t\n\t    // this moves us into the AUTHENTICATED state, potentially causing\n\t    // a number of side-effects. this is so we can re-verify the email\n\t    // address if we have to\n\t    case 'COGNITO_UPDATE_USER_ATTRIBUTES':\n\t      return Object.assign({}, state, {\n\t        attributes: Object.assign({}, state.attributes, action.attributes),\n\t        state: _states.CognitoState.AUTHENTICATED\n\t      });\n\t\n\t    default:\n\t      return state;\n\t  }\n\t};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tvar validateFormat = function validateFormat(format) {};\n\t\n\tif (false) {\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(19);\n\tvar invariant = __webpack_require__(20);\n\tvar ReactPropTypesSecret = __webpack_require__(23);\n\t\n\tmodule.exports = function() {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    invariant(\n\t      false,\n\t      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t      'Use PropTypes.checkPropTypes() to call them. ' +\n\t      'Read more at http://fb.me/use-check-prop-types'\n\t    );\n\t  };\n\t  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  };\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\t\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim,\n\t    exact: getShim\n\t  };\n\t\n\t  ReactPropTypes.checkPropTypes = emptyFunction;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\tif (false) {\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\t\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\t\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n\t} else {\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = __webpack_require__(21)();\n\t}\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// react-cognito.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 35ba562028590692bc98","export * from './reducers';\nexport * from './actions';\nexport * from './states';\nexport * from './utils';\nexport * from './guard';\nexport * from './auth';\nexport * from './attributes';\nexport * from './policy';\n\n\nexport * from './Login.jsx';\nexport * from './Logout.jsx';\nexport * from './NewPasswordRequired.jsx';\nexport * from './EmailVerification.jsx';\nexport * from './PasswordReset.jsx';\nexport * from './Confirm.jsx';\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * container for all the actions\n*/\nconst Action = {\n\n  configure: config => ({\n    type: 'COGNITO_CONFIGURE',\n    config,\n  }),\n\n  startAuthentication: () => ({\n      type: 'COGNITO_AUTHENTICATING'\n  }),\n\n  authenticated: user => ({\n    type: 'COGNITO_AUTHENTICATED',\n    user,\n  }),\n\n  loggingIn: attributes => ({\n    type: 'COGNITO_LOGGING_IN',\n    attributes,\n  }),\n\n  login: (creds, attributes, groups) => ({\n    type: 'COGNITO_LOGIN',\n    creds,\n    groups,\n    attributes,\n  }),\n\n  logout: () => ({\n    type: 'COGNITO_LOGOUT',\n  }),\n\n  partialLogout: () => ({\n    type: 'COGNITO_PARTIAL_LOGOUT',\n  }),\n\n  loginFailure: (user, error) => ({\n    type: 'COGNITO_LOGIN_FAILURE',\n    user,\n    error,\n  }),\n\n  mfaRequired: user => ({\n    type: 'COGNITO_LOGIN_MFA_REQUIRED',\n    user,\n  }),\n\n  newPasswordRequired: user => ({\n    type: 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED',\n    user,\n  }),\n\n  newPasswordRequiredFailure: (user, error) => ({\n    type: 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE',\n    user,\n    error,\n  }),\n\n  emailVerificationRequired: attributes => ({\n    type: 'COGNITO_EMAIL_VERIFICATION_REQUIRED',\n    attributes,\n  }),\n\n  emailVerificationFailed: (user, error) => ({\n    type: 'COGNITO_EMAIL_VERIFICATION_FAILED',\n    user,\n    error,\n  }),\n\n  beginPasswordResetFlow: (user, error) => ({\n    type: 'COGNITO_BEGIN_PASSWORD_RESET_FLOW',\n    user,\n    error,\n  }),\n\n  continuePasswordResetFlow: user => ({\n    type: 'COGNITO_CONTINUE_PASSWORD_RESET_FLOW',\n    user,\n  }),\n\n  finishPasswordResetFlow: error => ({\n    type: 'COGNITO_FINISH_PASSWORD_RESET_FLOW',\n    error,\n  }),\n\n  updateAttributes: attributes => ({\n    type: 'COGNITO_UPDATE_USER_ATTRIBUTES',\n    attributes,\n  }),\n\n  confirmationRequired: (user, email) => ({\n    type: 'COGNITO_USER_UNCONFIRMED',\n    user,\n    email,\n  }),\n\n  confirmFailed: (user, error) => ({\n    type: 'COGNITO_USER_CONFIRM_FAILED',\n    user,\n    error,\n  }),\n\n  clearCache: () => ({\n    type: 'COGNITO_CLEAR_CACHE',\n  }),\n};\n\nexport { Action };\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"ReactRedux\",\"commonjs\":\"react-redux\",\"commonjs2\":\"react-redux\",\"amd\":\"react-redux\"}\n// module id = 3\n// module chunks = 0","\nimport { Action } from './actions';\n\n/**\n * Request that a verification code is sent by email or SMS to verify\n * an attribute\n * @param {object} user - the cognito user object\n * @param {string} attribute - the attribute name\n*/\nconst sendAttributeVerificationCode = (user, attribute) =>\n  new Promise((resolve, reject) => {\n    user.getAttributeVerificationCode(attribute, {\n      onSuccess: () => resolve(false),\n      inputVerificationCode: () => resolve(true),\n      onFailure: error => reject(error.message),\n    });\n  });\n\n/**\n * Fetches the user attributes from Cognito, and turns them into\n * an object\n * @param {object} user - the cognito user object\n * @returns {Promise} resolves with the attributes or rejects with an error message\n*/\nconst getUserAttributes = user =>\n  new Promise((resolve, reject) =>\n    user.getUserAttributes((error, result) => {\n      if (error) {\n        reject(error.message);\n      } else {\n        const attributes = {};\n        for (let i = 0; i < result.length; i += 1) {\n          const name = result[i].getName();\n          const value = result[i].getValue();\n          attributes[name] = value;\n        }\n        resolve(attributes);\n      }\n    }),\n  );\n\n/**\n * convert an attribute dictionary to an attribute list\n * @param {object} attributes - a dictionary of attributes\n * @return {array} AWS expected attribute list\n*/\nconst mkAttrList = attributes =>\n  Object.keys(attributes).map(key => ({\n    Name: key,\n    Value: attributes[key],\n  }));\n\n/**\n * update the attributes in Cognito\n * @param {object} user - the CognitoUser object\n * @param {object} attributes - an attributes dictionary with the attributes to be updated\n * @return {Promise<object>} a promise that resolves to a redux action\n*/\nconst updateAttributes = (user, attributes) =>\n  new Promise((resolve, reject) => {\n    const attributeList = mkAttrList(attributes);\n    user.updateAttributes(attributeList, (err) => {\n      if (err) {\n        reject(err.message);\n      } else {\n        resolve(Action.updateAttributes(attributes));\n      }\n    });\n  });\n\nexport {\n  sendAttributeVerificationCode,\n  getUserAttributes,\n  updateAttributes,\n  mkAttrList,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/attributes.js","import { CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js';\nimport { CognitoIdentityCredentials } from 'aws-sdk/global';\nimport { Action } from './actions';\nimport { getUserAttributes, mkAttrList, sendAttributeVerificationCode } from './attributes';\nimport { buildLogins, getGroups } from './utils';\n\n/**\n * sends the email verification code and transitions to the correct state\n * @param {object} user - the CognitoUser object\n * @param {object} attributes - the attributes dictionary\n * @return {Promise<object>} a promise that resolves to a redux action\n*/\nconst emailVerificationFlow = (user, attributes) =>\n  new Promise(resolve =>\n    sendAttributeVerificationCode(user, 'email').then((required) => {\n      if (required) {\n        resolve(Action.emailVerificationRequired(attributes));\n      } else {\n        // dead end?\n        resolve(Action.loggingIn(attributes));\n      }\n    }, (error) => {\n      // some odd classes of error here\n      resolve(Action.emailVerificationFailed(error, attributes));\n    }));\n\n/**\n * logs in to the federated identity pool with a JWT\n * @param {string} username - the username\n * @param {string} jwtToken - a token from the session\n * @param {object} config - the react-cognito config\n * @return {Promise<object>} a promise that resolves to the federated identity credentials\n*/\nconst refreshIdentityCredentials = (username, jwtToken, config) =>\n  new Promise((resolve, reject) => {\n    const logins = buildLogins(username, jwtToken, config);\n    const creds = new CognitoIdentityCredentials(logins, { region: config.region });\n    creds.refresh((error) => {\n      if (error) {\n        reject(error.message);\n      } else {\n        resolve(creds);\n      }\n    });\n  });\n\n/**\n * establishes a session with the user pool, and logs into the federated identity\n * pool using a token from the session\n * @param {object} user - the CognitoUser object\n * @param {object} config -the react-cognito config\n * @return {Promise<object>} an action to be dispatched\n*/\nconst performLogin = (user, config, group) =>\n  new Promise((resolve, reject) => {\n    if (user === null) {\n      resolve(Action.logout());\n    } else {\n      user.getSession((err, session) => {\n        if (err) {\n          resolve(Action.loginFailure(user, err.message));\n        } else {\n          const jwtToken = session.getIdToken().getJwtToken();\n          const groups = getGroups(jwtToken);\n          if (group && !groups.includes(group)) {\n            return resolve(Action.loginFailure(user, 'Insufficient privilege'));\n          }\n\n          const username = user.getUsername();\n          refreshIdentityCredentials(username, jwtToken, config).then(\n            (creds) => {\n              getUserAttributes(user).then((attributes) => {\n                resolve(Action.login(creds, attributes, groups));\n              });\n            },\n            message => resolve(Action.loginFailure(user, message)));\n        }\n      });\n    }\n  });\n\n/**\n *\n * Authenticates with a user pool, and handles responses.\n * if the authentication is successful it then logs in to the\n * identity pool.\n *\n * returns an action depending on the outcome.  Possible actions returned\n * are:\n *\n * - login - valid user who is logged in\n * - loginFailure - failed to authenticate with user pool or identity pool\n * - mfaRequired - user now needs to enter MFA\n * - newPasswordRequired - user must change password on first login\n * - emailVerificationRequired - user must verify their email address\n * - emailVerificationFailed - email verification is required, but won't work\n *\n * Dispatch the resulting action, e.g.:\n *\n * ```\n * const { userPool, config } = state.cognito;\n * authenticate(username, password, userPool, config).then(dispatch);\n * ```\n *\n * @param {string} username - the username provided by the user\n * @param {string} password - the password provided by the user\n * @param {object} userPool - a Cognito User Pool object\n * @return {Promise<object>} - a promise that resolves an action to be dispatched\n *\n*/\nconst authenticate = (username, password, userPool, config, dispatch) =>\n  new Promise((resolve, reject) => {\n    const creds = new AuthenticationDetails({\n      Username: username,\n      Password: password,\n    });\n\n    const user = new CognitoUser({\n      Username: username,\n      Pool: userPool,\n    });\n\n      dispatch(Action.startAuthentication());\n\n      user.authenticateUser(creds, {\n      onSuccess: () => {\n        dispatch(Action.authenticated(user));\n        resolve();\n      },\n      onFailure: (error) => {\n        if (error.code === 'UserNotConfirmedException') {\n          dispatch(Action.confirmationRequired(user));\n          resolve();\n        } else {\n          dispatch(Action.loginFailure(user, error.message));\n          reject(error);\n        }\n      },\n      mfaRequired: () => {\n        dispatch(Action.mfaRequired(user));\n        resolve();\n      },\n      newPasswordRequired: () => {\n        dispatch(Action.newPasswordRequired(user));\n        resolve();\n      },\n    });\n  });\n\n/**\n * sign up this user with the user pool provided\n * @param {object} userPool - a Cognito userpool (e.g. state.cognito.userPool)\n * @param {object} config - the react-cognito config object\n * @param {string} username - the username\n * @param {string} password - the password\n * @param {object} attributes - an attributes dictionary\n * @return {Promise<object>} a promise that resolves a redux action\n*/\nconst registerUser = (userPool, config, username, password, attributes) =>\n  new Promise((resolve, reject) =>\n    userPool.signUp(username, password, mkAttrList(attributes), null, (err, result) => {\n      if (err) {\n        reject(err.message);\n      } else if (result.userConfirmed === false) {\n        resolve(Action.confirmationRequired(result.user, attributes.email));\n      } else {\n        resolve(authenticate(username, password, userPool));\n      }\n    }));\n\n\nexport {\n  authenticate,\n  performLogin,\n  registerUser,\n  emailVerificationFlow,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/auth.js","\n/** states stored in store.cognito.state */\nexport const CognitoState = {\n  LOGGED_OUT: 'LOGGED_OUT',\n  AUTHENTICATING: 'AUTHENTICATING',\n  AUTHENTICATED: 'AUTHENTICATED',\n  LOGGING_IN: 'LOGGING_IN',\n  LOGGED_IN: 'LOGGED_IN',\n  NEW_PASSWORD_REQUIRED: 'NEW_PASSWORD_REQUIRED',\n  MFA_REQUIRED: 'MFA_REQUIRED',\n  EMAIL_VERIFICATION_REQUIRED: 'EMAIL_VERIFICATION_REQUIRED',\n  CONFIRMATION_REQUIRED: 'CONFIRMATION_REQUIRED',\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/states.js","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"AmazonCognitoIdentity\",\"commonjs2\":\"amazon-cognito-identity-js\",\"commonjs\":\"amazon-cognito-identity-js\",\"amd\":\"amazon-cognito-identity-js\"}\n// module id = 7\n// module chunks = 0","import { util as AWSutil } from 'aws-sdk/global';\n\n/**\n * Change a user's password\n * @param {object} user - the cognito user object\n * @param {string} oldPassword - the current password\n * @param {string} newPassword - the new password\n*/\nconst changePassword = (user, oldPassword, newPassword) =>\n  new Promise((resolve, reject) =>\n    user.changePassword(oldPassword, newPassword, (err, result) => {\n      if (err) {\n        reject(err.message);\n      } else {\n        resolve(result);\n      }\n    }));\n\n/**\n * builds the federated identity pool login structure\n * @param {string} username - the username of the user\n * @param {string} jwtToken - a JWT Token from the session\n * @param {object} config - the cognito react config object\n*/\nconst buildLogins = (username, jwtToken, config) => {\n  const loginDomain = `cognito-idp.${config.region}.amazonaws.com`;\n  const loginUrl = `${loginDomain}/${config.userPool}`;\n  const creds = {\n    IdentityPoolId: config.identityPool,\n    Logins: {},\n    LoginId: username, // https://github.com/aws/aws-sdk-js/issues/609\n  };\n  creds.Logins[loginUrl] = jwtToken;\n  return creds;\n};\n\n/**\n * Decode a jwtToken to check for cognito:groups\n * @param {string} jwtToken - a JWT Token from the session\n */\nconst getGroups = (jwtToken) => {\n  const payload = jwtToken.split('.')[1];\n  const decodedToken = JSON.parse(AWSutil.base64.decode(payload).toString('utf8'));\n  // decodedToken['cognito:groups'] can be undefined if user is in no groups\n  if (!decodedToken['cognito:groups']) {\n    return [];\n  }\n  return decodedToken['cognito:groups'];\n};\n\nexport {\n  changePassword,\n  buildLogins,\n  getGroups,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","module.exports = __WEBPACK_EXTERNAL_MODULE_9__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"aws-sdk/global\"\n// module id = 9\n// module chunks = 0","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Action } from './actions';\n\nconst BaseConfirm = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    onSubmit: props.onSubmit,\n    onResend: props.onResend,\n    onCancel: props.onCancel,\n  });\n\nconst confirm = (verificationCode, user, dispatch) =>\n  new Promise((resolve, reject) => {\n    user.confirmRegistration(verificationCode, true, (error) => {\n      if (error) {\n        dispatch(Action.confirmFailed(user));\n        reject(error.message);\n      } else {\n        dispatch(Action.partialLogout());\n        resolve(user);\n      }\n    });\n  });\n\nconst resend = (user, dispatch) =>\n  new Promise((resolve, reject) => {\n    user.resendConfirmationCode((err) => {\n      if (err) {\n        dispatch(Action.confirmationRequired(user));\n        reject(err.message);\n      } else {\n        dispatch(Action.confirmationRequired(user));\n        resolve(user);\n      }\n    });\n  });\n\nconst mapStateToProps = state => ({\n  error: state.cognito.error,\n  user: state.cognito.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  confirmPartial: (verificationCode, user) =>\n    confirm(verificationCode, user, dispatch),\n  onCancel: () => dispatch(Action.logout()),\n  onResendPartial: user => resend(user, dispatch),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, dispatchProps, {\n    onSubmit: verificationCode =>\n     dispatchProps.confirmPartial(verificationCode, stateProps.user),\n    onResend: () =>\n     dispatchProps.onResendPartial(stateProps.user),\n  });\n\n/**\n * Container for a confirmation form.  Magically adds the following props to the \n * contained form:\n *\n *  * user - the Cognito User from the redux store\n *  * error - the persisted error from the redux store\n *  * onSubmit - a handler that calls the Cognito confirm API\n *  * onResend - a handler that calls the Cognito resend request API\n *  * onCancel - Logs the user out completely\n *\n * @example\n * <Confirm>\n *   <ConfirmForm />\n * </Confirm>\n *\n */\nexport const Confirm = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseConfirm);\n\n\n\n// WEBPACK FOOTER //\n// ./src/Confirm.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Action } from './actions';\n\nconst BaseEmailVerification = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    onSubmit: props.onSubmit,\n    onCancel: props.onCancel,\n  });\n\nexport const verifyEmail = (verificationCode, user, dispatch) =>\n  new Promise((resolve, reject) => {\n    user.verifyAttribute('email', verificationCode, {\n      onSuccess: () => {\n        dispatch(Action.login(user));\n        resolve();\n      },\n      inputVerificationCode: () => {\n        dispatch(Action.emailVerificationRequired(user));\n        reject();\n      },\n      onFailure: (error) => {\n        dispatch(Action.emailVerificationFailed(user, error.message));\n        reject();\n      },\n    });\n  });\n\nconst mapStateToProps = state => ({\n  error: state.cognito.error,\n  user: state.cognito.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  verifyPartial: (verificationCode, user) =>\n    verifyEmail(verificationCode, user, dispatch),\n  onCancel: () => dispatch(Action.logout()),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, dispatchProps, {\n    onSubmit: verificationCode =>\n     dispatchProps.verifyPartial(verificationCode, stateProps.user),\n  });\n\n/**\n * Wrapper for an Email Verification Form.\n * Magically adds the following props to the contained form:\n *\n *  * user - the Cognito user from the Redux store\n *  * error - the persisted error from the Redux store\n *  * onSubmit - a handler that calls the Cognito verification API\n *\n * @example\n * <EmailVerification>\n *   <EmailVerificationForm />\n * </EmailVerification>\n *\n */\nexport const EmailVerification = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseEmailVerification);\n\n\n\n// WEBPACK FOOTER //\n// ./src/EmailVerification.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authenticate } from './auth';\nimport { Action } from './actions';\n\nconst BaseLogin = props =>\n  React.cloneElement(props.children, {\n    username: props.username,\n    email: props.email,\n    onSubmit: props.onSubmit,\n    clearCache: props.clearCache,\n    error: props.error,\n  });\n\nconst mapStateToProps = (state) => {\n  let username = '';\n  if (state.cognito.user) {\n    username = state.cognito.user.getUsername();\n  } else if (state.cognito.userName) {\n    username = state.cognito.cache.userName;\n  }\n  return {\n    username,\n    email: state.cognito.cache.email,\n    config: state.cognito.config,\n    userPool: state.cognito.userPool,\n    error: state.cognito.error,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authenticator: (username, password, userPool, config) =>\n    authenticate(username, password, userPool, config, dispatch),\n  clearCache: () => dispatch(Action.clearCache()),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, {\n    onSubmit: (username, password) =>\n      dispatchProps.authenticator(username, password, stateProps.userPool, stateProps.config),\n    clearCache: dispatchProps.clearCache,\n  });\n\n/**\n * Container for login behaviour, wrapping a login form.\n *\n * Magically provides the following props to the wrapped form:\n *\n *  * username\n *  * onSubmit\n *\n * @example\n * <Login>\n *   <LoginForm />\n * </Login>\n */\nconst Login = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseLogin);\n\nexport { Login };\n\n\n\n// WEBPACK FOOTER //\n// ./src/Login.jsx","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { Action } from './actions';\n\n/**\n * Container for logout behaviour.\n * @example\n * <Logout onLogout={handler}>\n *   <LogoutForm />\n * </Logout>\n */\nexport class Logout extends React.Component {\n\n  /**\n   * Passed to child element as onClick prop.\n   * Signs the user out, and then dispatches the logout action\n   * If you want to take further actions (like reloading UI) then add an\n   * onLogout property to the Logout element\n   */\n  onClick = (event) => {\n    const { store } = this.context;\n    const state = store.getState();\n    state.cognito.user.signOut();\n    event.preventDefault();\n    store.dispatch(Action.logout());\n    this.props.onLogout();\n  }\n\n  /**\n   * renders the child element, adding an onClick property\n   */\n  render() {\n    return React.cloneElement(this.props.children, {\n      onClick: this.onClick,\n    });\n  }\n}\nLogout.contextTypes = {\n  store: PropTypes.object,\n};\nLogout.propTypes = {\n  children: PropTypes.any.isRequired,\n  onLogout: PropTypes.func,\n};\nLogout.defaultProps = {\n  onLogout: () => {},\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/Logout.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Action } from './actions';\n\nconst BaseNewPasswordRequired = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    onSubmit: props.onSubmit,\n  });\n\nconst setNewPassword = (password, user, config, userAttributes, dispatch) =>\n  new Promise((resolve, reject) => {\n    user.completeNewPasswordChallenge(password, userAttributes, {\n      onSuccess: () => {\n        dispatch(Action.authenticated(user));\n        resolve();\n      },\n      onFailure: error => {\n        dispatch(Action.newPasswordRequiredFailure(user, error.message));\n        reject(error);\n      },\n      mfaRequired: () => {\n        dispatch(Action.mfaRequired(user));\n        resolve();\n      },\n      newPasswordRequired: () => {\n        dispatch(Action.newPasswordRequired(user));\n        resolve();\n      },\n    });\n  });\n\nconst mapStateToProps = state => ({\n  error: state.cognito.error,\n  user: state.cognito.user,\n  config: state.cognito.config,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setNewPasswordPartial: (password, user, config, userAttributes) =>\n    setNewPassword(password, user, config, userAttributes, dispatch),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, {\n    onSubmit: (password, userAttributes) =>\n     dispatchProps.setNewPasswordPartial(\n      password,\n      stateProps.user,\n      stateProps.config,\n      userAttributes),\n  });\n\n/**\n * Wrapper for a New Password Required form\n *\n * Magically provides the following props to the wrapped element:\n *\n * * user - the Cognito user\n * * error - the persistent react-cognito error message\n * * onSubmit - a handler that calls the Set New Password API\n *\n * @example\n *\n * <NewPasswordRequired>\n *   <NewPasswordRequiredForm />\n * </NewPasswordRequired>\n */\nexport const NewPasswordRequired = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseNewPasswordRequired);\n\n\n\n// WEBPACK FOOTER //\n// ./src/NewPasswordRequired.jsx","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CognitoUser } from 'amazon-cognito-identity-js';\nimport { Action } from './actions';\n\nconst BasePasswordReset = props =>\n  React.cloneElement(props.children, {\n    username: props.username,\n    sendVerificationCode: props.sendVerificationCode,\n    setPassword: props.setPassword,\n  });\n\nconst getUser = (username, userPool) => {\n  const user = new CognitoUser({\n    Username: username,\n    Pool: userPool,\n  });\n  return user;\n};\n\nconst setPassword = (username, userPool, code, password, dispatch) =>\n  new Promise((resolve, reject) => {\n    const user = getUser(username, userPool);\n    user.confirmPassword(code, password, {\n      onSuccess: () => {\n        dispatch(Action.finishPasswordResetFlow()),\n        resolve();\n      },\n      onFailure: err => {\n        dispatch(Action.beginPasswordResetFlow(user, err.message)),\n        reject(err);\n      }\n    });\n  });\n\n\nconst sendVerificationCode = (username, userPool, dispatch) =>\n  new Promise((resolve, reject) => {\n    const user = getUser(username, userPool);\n    user.forgotPassword({\n      onSuccess: () => {\n        dispatch(Action.continuePasswordResetFlow(user));\n        resolve();\n      },\n      onFailure: err => {\n        dispatch(Action.beginPasswordResetFlow(user, err.message));\n        reject(err);\n      }\n    });\n  });\n\n\nconst mapStateToProps = (state) => {\n  const props = {\n    user: state.cognito.user,\n    username: '',\n    userPool: state.cognito.userPool,\n  };\n  if (state.cognito.user != null) {\n    props.username = state.cognito.user.getUsername();\n  }\n  return props;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  sendVerificationCodePartial: (username, userPool) =>\n    sendVerificationCode(username, userPool, dispatch),\n  setPasswordPartial: (user, userPool, code, password) =>\n    setPassword(user, userPool, code, password, dispatch),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, {\n    sendVerificationCode: username =>\n      dispatchProps.sendVerificationCodePartial(username, stateProps.userPool),\n    setPassword: (username, code, password) =>\n      dispatchProps.setPasswordPartial(username, stateProps.userPool, code, password),\n  });\n\n/**\n * Container for a Password Reset form\n *\n * Magically provides the following props to the wrapped element:\n *\n *  * user\n *  * username\n *  * sendVerificationCode\n *  * setPassword\n *\n * @example\n * <PasswordReset>\n *   <PasswordResetForm />\n * </PasswordReset>\n */\nexport const PasswordReset = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BasePasswordReset);\n\n\n\n// WEBPACK FOOTER //\n// ./src/PasswordReset.jsx","\n/*\n Default behaviour is to restrict access to only logged in users\n*/\n\nconst testLoggedIn = (state, wantLoggedIn) => {\n  const isLoggedIn = state.cognito.user !== null;\n  if (isLoggedIn && wantLoggedIn) {\n    return true;\n  }\n  if (!isLoggedIn && !wantLoggedIn) {\n    return true;\n  }\n  return false;\n};\n\nconst permitted = (state, expr) =>\n  new Promise((resolve) => {\n    if (expr.loggedIn !== undefined) {\n      resolve(testLoggedIn(state, expr.loggedIn));\n    } else {\n      resolve(testLoggedIn(state, true));\n    }\n  });\n\nconst guard = (store, forbiddenUrl, expr = {}, routeState, replace, callback) => {\n  const state = store.getState();\n  let dest = forbiddenUrl;\n\n  if (expr.forbiddenUrl !== undefined) {\n    dest = expr.forbiddenUrl;\n  }\n  permitted(state, expr).then((allow) => {\n    if (!allow) {\n      replace(dest);\n    }\n    callback();\n  });\n};\n\n/**\n * creates a guard function you can use in <Route> tags\n * @param {object} store - the redux store\n * @param {string} forbiddenUrl - the default url to navigate to if forbidden\n * @returns {function} - a function that can be provided to onEnter\n*/\nconst createGuard = (store, forbiddenUrl) => expr => (state, replace, callback) =>\n  guard(store, forbiddenUrl, expr, state, replace, callback);\n\n\nexport { createGuard };\n\n\n\n// WEBPACK FOOTER //\n// ./src/guard.js","import { Action } from './actions';\nimport { getUserAttributes } from './attributes';\nimport { emailVerificationFlow, performLogin } from './auth';\nimport { CognitoState } from './states';\n\n/**\n * subscribes a \"policy\" function to the store, and calls it\n * with the state and the dispatch function\n * @param {object} store - the redux store\n * @param {function} f - f(state, dispatch)\n*/\nconst enable = (store, f, params) => {\n  store.subscribe(() => {\n    const state = store.getState();\n    const dispatch = store.dispatch;\n    f(state, dispatch, params);\n  });\n};\n\n/**\n * requires email verification before transitioning from AUTHENTICATED\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst emailVerificationRequired = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.AUTHENTICATED) {\n    const user = state.cognito.user;\n    getUserAttributes(user).then((attributes) => {\n      if (attributes.email_verified !== 'true') {\n        emailVerificationFlow(user, attributes).then(dispatch);\n      } else {\n        dispatch(Action.loggingIn(attributes));\n      }\n    });\n  }\n};\n\n/**\n * fetches and stores attributes before transitioning from AUTHENTICATED\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst fetchAttributes = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.AUTHENTICATED) {\n    const user = state.cognito.user;\n    getUserAttributes(user).then((attributes) => {\n      dispatch(Action.loggingIn(attributes));\n    });\n  }\n};\n\n/**\n * transitions directly from AUTHENTICATED to LOGGING_IN\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst direct = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.AUTHENTICATED) {\n    dispatch(Action.loggingIn());\n  }\n};\n\n/**\n * logs into the single federated identity pool to transition from LOGGING_IN\n * to LOGGED_IN\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst identityPoolLogin = (state, dispatch, group) => {\n  if (state.cognito.state === CognitoState.LOGGING_IN) {\n    performLogin(state.cognito.user, state.cognito.config, group).then(dispatch);\n  }\n};\n\n/**\n * sets up react-cognito with default policies.\n*/\nconst setupCognito = (store, config, listeners =\n  [emailVerificationRequired, identityPoolLogin]) => {\n  store.dispatch(Action.configure(config));\n  listeners.forEach((f) => {\n    enable(store, f, config.group);\n  });\n  store.dispatch(Action.loggingIn({}));\n};\n\nexport {\n  setupCognito,\n  enable,\n  direct,\n  fetchAttributes,\n  emailVerificationRequired,\n  identityPoolLogin,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/policy.js","import { CognitoUserPool } from 'amazon-cognito-identity-js';\nimport { CognitoState } from './states';\n\n/* global AWS */\n\nconst initial = {\n  user: null,\n  cache: { // cached for post register login\n    userName: null,\n    email: null,\n  },\n  state: CognitoState.LOGGED_OUT,\n  error: '',\n  userPool: null,\n  attributes: {},\n  creds: null,\n  groups: [],\n  config: {\n    region: null,\n    userPool: null,\n    clientId: null,\n    identityPool: null,\n  },\n};\n\nconst configure = (state, action) => {\n  // surprise side-effect!\n  AWS.config.region = action.config.region;\n  const pool = new CognitoUserPool({\n    UserPoolId: action.config.userPool,\n    ClientId: action.config.clientId,\n  });\n  const user = pool.getCurrentUser();\n  return Object.assign({}, state, {\n    config: action.config,\n    userPool: pool,\n    user,\n  });\n};\n\n// sometimes we don't get the attributes in later parts of the login flow\n// but lets not clobber the ones we've got if we've not got them\nconst addAttributes = (s, attributes) => {\n  const s2 = Object.assign({}, s);\n  if (attributes) {\n    s2.attributes = attributes;\n  }\n  return s2;\n};\n\n/**\n * reducer function to be passed to redux combineReducers\n * @param {object} state\n * @param {object} action\n*/\n\nexport const cognito = (state = initial, action) => {\n  switch (action.type) {\n\n    case 'COGNITO_CONFIGURE':\n      return configure(state, action);\n\n    case 'COGNITO_AUTHENTICATING':\n        return Object.assign({}, state, {\n            state: CognitoState.AUTHENTICATING,\n        });\n\n    case 'COGNITO_AUTHENTICATED':\n      return Object.assign({}, state, {\n        user: action.user,\n        cache: {\n          userName: null,\n          email: null,\n        },\n        error: '',\n        state: CognitoState.AUTHENTICATED,\n      });\n\n    case 'COGNITO_CLEAR_CACHE':\n      return Object.assign({}, state, {\n        cache: {\n          userName: null,\n          email: null,\n        },\n      });\n\n    case 'COGNITO_LOGGING_IN':\n      return Object.assign({}, state, {\n        state: CognitoState.LOGGING_IN,\n        attributes: action.attributes,\n      });\n\n    case 'COGNITO_LOGIN':\n      return Object.assign({}, state, addAttributes({\n        error: '',\n        creds: action.creds,\n        groups: action.groups,\n        state: CognitoState.LOGGED_IN,\n      }, action.attributes));\n\n    case 'COGNITO_LOGOUT':\n      return Object.assign({}, state, {\n        user: null,\n        attributes: {},\n        error: '',\n        creds: null,\n        groups: [],\n        state: CognitoState.LOGGED_OUT,\n      });\n\n    case 'COGNITO_PARTIAL_LOGOUT':\n      return Object.assign({}, state, {\n        user: null,\n        userName: state.user.username,\n        error: '',\n        creds: null,\n        groups: [],\n        state: CognitoState.LOGGED_OUT,\n      });\n\n    case 'COGNITO_LOGIN_FAILURE':\n      return Object.assign({}, state, {\n        user: action.user,\n        state: CognitoState.LOGGED_OUT,\n        error: action.error,\n      });\n\n    case 'COGNITO_LOGIN_MFA_REQUIRED':\n      return Object.assign({}, state, {\n        user: action.user,\n        error: '',\n        state: CognitoState.MFA_REQUIRED,\n      });\n\n    case 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED':\n      return Object.assign({}, state, {\n        user: action.user,\n        error: '',\n        state: CognitoState.NEW_PASSWORD_REQUIRED,\n      });\n\n    case 'COGNITO_USER_UNCONFIRMED':\n      return Object.assign({}, state, {\n        user: action.user,\n        state: CognitoState.CONFIRMATION_REQUIRED,\n        cache: {\n          userName: action.user.username,\n          email: action.email ? action.email : state.cache.email,\n        },\n      });\n\n    case 'COGNITO_USER_CONFIRM_FAILED':\n      return Object.assign({}, state, {\n        user: action.user,\n        state: CognitoState.CONFIRMATION_REQUIRED,\n        error: action.error,\n      });\n\n    case 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE':\n      return Object.assign({}, state, {\n        error: action.error,\n        state: CognitoState.NEW_PASSWORD_REQUIRED,\n      });\n\n    case 'COGNITO_EMAIL_VERIFICATION_REQUIRED':\n      return Object.assign({}, state, addAttributes({\n        error: '',\n        state: CognitoState.EMAIL_VERIFICATION_REQUIRED,\n      }, action.attributes));\n\n    case 'COGNITO_EMAIL_VERIFICATION_FAILED':\n      return Object.assign({}, state, addAttributes({\n        error: action.error,\n        state: CognitoState.EMAIL_VERIFICATION_REQUIRED,\n      }, action.attributes));\n\n    case 'COGNITO_BEGIN_PASSWORD_RESET_FLOW':\n      return Object.assign({}, state, {\n        error: action.error,\n      });\n\n    case 'COGNITO_CONTINUE_PASSWORD_RESET_FLOW':\n      return state;\n\n    case 'COGNITO_FINISH_PASSWORD_RESET_FLOW':\n      return state;\n\n    // this moves us into the AUTHENTICATED state, potentially causing\n    // a number of side-effects. this is so we can re-verify the email\n    // address if we have to\n    case 'COGNITO_UPDATE_USER_ATTRIBUTES':\n      return Object.assign({}, state, {\n        attributes: Object.assign({}, state.attributes, action.attributes),\n        state: CognitoState.AUTHENTICATED,\n      });\n\n    default:\n      return state;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers.js","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyFunction.js\n// module id = 19\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/invariant.js\n// module id = 20\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithThrowingShims.js\n// module id = 21\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/index.js\n// module id = 22\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 23\n// module chunks = 0"],"sourceRoot":""}